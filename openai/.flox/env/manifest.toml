#
# This is a flox environment manifest.
# Visit flox.dev/docs/concepts/manifest/
# or see flox-edit(1), manifest.toml(1) for more information.
#

[install]
openai.pkg-path  = "openai"
jupyter.pkg-path = "jupyter"
llm.pkg-path     = "llm"
vscode.pkg-path  = "vscode"
gum.pkg-path     = "gum"

[profile]
common = """

  # First, check if $OPENAI_API_KEY is set
  if [[ "${OPENAI_API_KEY}" ]]; then
    echo "ðŸ¤– OpenAI configured with key from existing environment"
    return 0
  fi

  # Then, check to see if the dotfile exists
  if [[ -f ~/.config/openai.key ]]; then
    export OPENAI_API_KEY=$(cat ~/.config/openai.key)
    echo "ðŸ¤– OpenAI configured with key from ~/.config/openai.key"
    return 0
  fi

  # We got nothing! Let's ask.
  echo "OpenAI key not detected."
  
  if gum confirm "Would you like to provide one now?" --default=true --affirmative "Yes" --negative "No"; then
    OPENAI_API_KEY=$(gum input --placeholder "OpenAI API key")
    if gum confirm "Write this into ~/.config/openai.key for next time?" --default=true --affirmative "Yes" --negative "No"; then
      echo "$OPENAI_API_KEY" > ~/.config/openai.key
      chmod 600 ~/.config/openai.key
    fi
    echo "ðŸ¤– OpenAI configured with provided key"
    return 0
  fi

  echo "An OpenAI key is required. You can provide one by setting OPENAI_API_KEY."
  echo; echo "ðŸš¨ OpenAI client is available (no key)"

"""

[hook]
# on-activate = """
#     mkdir my_data_dir
# """

[options]
systems = ["aarch64-darwin"]

