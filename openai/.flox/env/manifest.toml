## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1

[install]
openai.pkg-path = "openai"
mods.pkg-path = "mods"
llm.pkg-path = "llm"
gum.pkg-path = "gum"

[hook]
on-activate = '''
# First, check if $OPENAI_API_KEY is set
if [[ "${OPENAI_API_KEY}" ]]; then
  echo "ðŸ¤– OpenAI configured with key from existing environment"
  return 0
fi

# Then, check to see if the dotfile exists
if [[ -f ~/.config/openai.key ]]; then
  export OPENAI_API_KEY=$(cat ~/.config/openai.key)
  echo "ðŸ¤– OpenAI configured with key from ~/.config/openai.key"
  return 0
fi

# We got nothing! Let's ask.
echo "OpenAI key not detected."

# exit in CI, be kind to github
if [[ "$FLOX_ENVS_TESTING" == "1" ]]; then
  return 0
fi

if gum confirm "Would you like to provide one now?" --default=true --affirmative "Yes" --negative "No"; then
  OPENAI_API_KEY=$(gum input --placeholder "OpenAI API key")
  if gum confirm "Write this into ~/.config/openai.key for next time?" --default=true --affirmative "Yes" --negative "No"; then
    echo "$OPENAI_API_KEY" > ~/.config/openai.key
    chmod 600 ~/.config/openai.key
  fi
  export OPENAI_API_KEY
  echo "ðŸ¤– OpenAI configured with provided key"
  return 0
fi

echo "An OpenAI key is required. You can provide one by setting OPENAI_API_KEY."
echo; echo "ðŸš¨ OpenAI client is available (no key)"
'''

[options]
systems = [
  "aarch64-darwin",
  "aarch64-linux",
  "x86_64-darwin",
  "x86_64-linux",
]
cuda-detection = false

