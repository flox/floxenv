version = 1

[install]
# Rust toolchain, put them in the same package group
# so rustc/cargo/etc exactly match versions/dependencies.
cargo.pkg-path = "cargo"
cargo.pkg-group = "rust-toolchain"
rustc.pkg-path = "rustc"
rustc.pkg-group = "rust-toolchain"
clippy.pkg-path = "clippy"
clippy.pkg-group = "rust-toolchain"
rustfmt.pkg-path = "rustfmt"
rustfmt.pkg-group = "rust-toolchain"
rust-lib-src.pkg-path = "rustPlatform.rustLibSrc"
rust-lib-src.pkg-group = "rust-toolchain"

# rust-analyzer goes in its own group because it's updated
# on a different cadence from the compiler and doesn't need
# to match versions
rust-analyzer.pkg-path = "rust-analyzer"
rust-analyzer.pkg-group = "rust-analyzer"

# Linkers
clang.pkg-path = "clang"
clang.systems = ["aarch64-darwin", "x86_64-darwin"]
gcc.pkg-path = "gcc"
gcc.systems = ["aarch64-linux", "x86_64-linux"]

# Platform-specific libraries
libiconv.pkg-path = "libiconv"
libiconv.systems = ["aarch64-darwin", "x86_64-darwin"]

# Extra tools
cargo-nextest.pkg-path = "cargo-nextest"
cargo-watch.pkg-path = "cargo-watch"
cargo-semver-checks.pkg-path = "cargo-semver-checks"
cargo-semver-checks.systems = [
  "aarch64-darwin",
  # XXX: for some reason this package is not building on x86_64-darwin, fix is
  #      already in upstream
  #"x86_64-darwin",
  "aarch64-linux",
  "x86_64-linux",
]
# For more use search: flox search cargo- --all

[vars]

[hook]

[profile]

[options]
systems = [
  "aarch64-darwin",
  "x86_64-darwin",
  "aarch64-linux",
  "x86_64-linux",
]
